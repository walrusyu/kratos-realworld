# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: RealWorld API
    version: 0.0.1
paths:
    /api/articles:
        get:
            tags:
                - RealWorld
            operationId: RealWorld_ListArticles
            parameters:
                - name: tag
                  in: query
                  schema:
                    type: string
                - name: author
                  in: query
                  schema:
                    type: string
                - name: favorited
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListArticlesReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - RealWorld
            operationId: RealWorld_CreateArticle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/feed:
        get:
            tags:
                - RealWorld
            operationId: RealWorld_FeedArticles
            parameters:
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FeedArticlesReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}:
        get:
            tags:
                - RealWorld
            operationId: RealWorld_GetArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - RealWorld
            operationId: RealWorld_UpdateArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RealWorld
            operationId: RealWorld_DeleteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}/comments:
        get:
            tags:
                - RealWorld
            operationId: RealWorld_GetComments
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCommentsReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - RealWorld
            operationId: RealWorld_AddComment
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCommentReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}/comments/{id}:
        delete:
            tags:
                - RealWorld
            operationId: RealWorld_DeleteComment
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCommentReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/articles/{slug}/favorite:
        post:
            tags:
                - RealWorld
            operationId: RealWorld_FavoriteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FavoriteArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FavoriteArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RealWorld
            operationId: RealWorld_UnFavoriteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnFavoriteArticleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/profiles/{username}:
        get:
            tags:
                - RealWorld
            operationId: RealWorld_GetProfile
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProfileReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/profiles/{username}/follow:
        post:
            tags:
                - RealWorld
            operationId: RealWorld_FollowUser
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FollowUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FollowUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RealWorld
            operationId: RealWorld_UnFollowUser
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnFollowUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/tags:
        get:
            tags:
                - RealWorld
            operationId: RealWorld_GetTags
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTagsReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/user:
        get:
            tags:
                - RealWorld
            operationId: RealWorld_GetCurrentUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCurrentUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - RealWorld
            operationId: RealWorld_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/users:
        post:
            tags:
                - RealWorld
            operationId: RealWorld_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/users/login:
        post:
            tags:
                - RealWorld
            operationId: RealWorld_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddCommentReply:
            type: object
            properties:
                comment:
                    $ref: '#/components/schemas/Comment'
        AddCommentRequest:
            type: object
            properties:
                slug:
                    type: string
                comment:
                    $ref: '#/components/schemas/Comment'
        Article:
            type: object
            properties:
                slug:
                    type: string
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                favorited:
                    type: boolean
                favoritesCount:
                    type: integer
                    format: uint32
                author:
                    $ref: '#/components/schemas/Author'
        Author:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: string
        Comment:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                updatedAt:
                    type: string
                body:
                    type: string
                author:
                    $ref: '#/components/schemas/Author'
        CreateArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/Article'
        CreateArticleRequest:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/Article'
        DeleteArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/Article'
        DeleteCommentReply:
            type: object
            properties:
                comment:
                    $ref: '#/components/schemas/Comment'
        FavoriteArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/Article'
        FavoriteArticleRequest:
            type: object
            properties:
                slug:
                    type: string
        FeedArticlesReply:
            type: object
            properties:
                articles:
                    type: array
                    items:
                        $ref: '#/components/schemas/Article'
        FollowUserReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/Profile'
        FollowUserRequest:
            type: object
            properties:
                username:
                    type: string
        GetArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/Article'
        GetCommentsReply:
            type: object
            properties:
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/Comment'
        GetCurrentUserReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/Profile'
        GetProfileReply:
            type: object
            properties:
                username:
                    type: string
        GetTagsReply:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/Tag'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListArticlesReply:
            type: object
            properties:
                articles:
                    type: array
                    items:
                        $ref: '#/components/schemas/Article'
        LoginReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/Profile'
        LoginRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        Profile:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        RegisterReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/Profile'
        RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                password:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Tag:
            type: object
            properties: {}
        UnFavoriteArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/Article'
        UnFollowUserReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/Profile'
        UpdateArticleReply:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/Article'
        UpdateArticleRequest:
            type: object
            properties:
                slug:
                    type: string
                article:
                    $ref: '#/components/schemas/Article'
        UpdateUserReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/Profile'
        UpdateUserRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        User:
            type: object
            properties:
                email:
                    type: string
                token:
                    type: string
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
tags:
    - name: RealWorld
